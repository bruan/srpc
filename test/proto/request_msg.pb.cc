// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: request_msg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "request_msg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* request_msg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  request_msg_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_request_5fmsg_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_request_5fmsg_2eproto() {
  protobuf_AddDesc_request_5fmsg_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "request_msg.proto");
  GOOGLE_CHECK(file != NULL);
  request_msg_descriptor_ = file->message_type(0);
  static const int request_msg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(request_msg, tt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(request_msg, info_),
  };
  request_msg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      request_msg_descriptor_,
      request_msg::default_instance_,
      request_msg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(request_msg, _has_bits_[0]),
      -1,
      -1,
      sizeof(request_msg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(request_msg, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_request_5fmsg_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      request_msg_descriptor_, &request_msg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_request_5fmsg_2eproto() {
  delete request_msg::default_instance_;
  delete request_msg_reflection_;
}

void protobuf_AddDesc_request_5fmsg_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_request_5fmsg_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021request_msg.proto\"\'\n\013request_msg\022\n\n\002tt"
    "\030\001 \002(\r\022\014\n\004info\030\002 \002(\t", 60);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "request_msg.proto", &protobuf_RegisterTypes);
  request_msg::default_instance_ = new request_msg();
  request_msg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_request_5fmsg_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_request_5fmsg_2eproto {
  StaticDescriptorInitializer_request_5fmsg_2eproto() {
    protobuf_AddDesc_request_5fmsg_2eproto();
  }
} static_descriptor_initializer_request_5fmsg_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int request_msg::kTtFieldNumber;
const int request_msg::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

request_msg::request_msg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:request_msg)
}

void request_msg::InitAsDefaultInstance() {
}

request_msg::request_msg(const request_msg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:request_msg)
}

void request_msg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  tt_ = 0u;
  info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

request_msg::~request_msg() {
  // @@protoc_insertion_point(destructor:request_msg)
  SharedDtor();
}

void request_msg::SharedDtor() {
  info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void request_msg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* request_msg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return request_msg_descriptor_;
}

const request_msg& request_msg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_request_5fmsg_2eproto();
  return *default_instance_;
}

request_msg* request_msg::default_instance_ = NULL;

request_msg* request_msg::New(::google::protobuf::Arena* arena) const {
  request_msg* n = new request_msg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void request_msg::Clear() {
// @@protoc_insertion_point(message_clear_start:request_msg)
  if (_has_bits_[0 / 32] & 3u) {
    tt_ = 0u;
    if (has_info()) {
      info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool request_msg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:request_msg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 tt = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tt_)));
          set_has_tt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_info;
        break;
      }

      // required string info = 2;
      case 2: {
        if (tag == 18) {
         parse_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_info()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->info().data(), this->info().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "request_msg.info");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:request_msg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:request_msg)
  return false;
#undef DO_
}

void request_msg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:request_msg)
  // required uint32 tt = 1;
  if (has_tt()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tt(), output);
  }

  // required string info = 2;
  if (has_info()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->info().data(), this->info().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "request_msg.info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:request_msg)
}

::google::protobuf::uint8* request_msg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:request_msg)
  // required uint32 tt = 1;
  if (has_tt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tt(), target);
  }

  // required string info = 2;
  if (has_info()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->info().data(), this->info().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "request_msg.info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->info(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:request_msg)
  return target;
}

int request_msg::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:request_msg)
  int total_size = 0;

  if (has_tt()) {
    // required uint32 tt = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tt());
  }

  if (has_info()) {
    // required string info = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->info());
  }

  return total_size;
}
int request_msg::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:request_msg)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 tt = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tt());

    // required string info = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->info());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void request_msg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:request_msg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const request_msg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const request_msg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:request_msg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:request_msg)
    MergeFrom(*source);
  }
}

void request_msg::MergeFrom(const request_msg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:request_msg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tt()) {
      set_tt(from.tt());
    }
    if (from.has_info()) {
      set_has_info();
      info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.info_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void request_msg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:request_msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void request_msg::CopyFrom(const request_msg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:request_msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool request_msg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void request_msg::Swap(request_msg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void request_msg::InternalSwap(request_msg* other) {
  std::swap(tt_, other->tt_);
  info_.Swap(&other->info_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata request_msg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = request_msg_descriptor_;
  metadata.reflection = request_msg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// request_msg

// required uint32 tt = 1;
bool request_msg::has_tt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void request_msg::set_has_tt() {
  _has_bits_[0] |= 0x00000001u;
}
void request_msg::clear_has_tt() {
  _has_bits_[0] &= ~0x00000001u;
}
void request_msg::clear_tt() {
  tt_ = 0u;
  clear_has_tt();
}
 ::google::protobuf::uint32 request_msg::tt() const {
  // @@protoc_insertion_point(field_get:request_msg.tt)
  return tt_;
}
 void request_msg::set_tt(::google::protobuf::uint32 value) {
  set_has_tt();
  tt_ = value;
  // @@protoc_insertion_point(field_set:request_msg.tt)
}

// required string info = 2;
bool request_msg::has_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void request_msg::set_has_info() {
  _has_bits_[0] |= 0x00000002u;
}
void request_msg::clear_has_info() {
  _has_bits_[0] &= ~0x00000002u;
}
void request_msg::clear_info() {
  info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_info();
}
 const ::std::string& request_msg::info() const {
  // @@protoc_insertion_point(field_get:request_msg.info)
  return info_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void request_msg::set_info(const ::std::string& value) {
  set_has_info();
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:request_msg.info)
}
 void request_msg::set_info(const char* value) {
  set_has_info();
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:request_msg.info)
}
 void request_msg::set_info(const char* value, size_t size) {
  set_has_info();
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:request_msg.info)
}
 ::std::string* request_msg::mutable_info() {
  set_has_info();
  // @@protoc_insertion_point(field_mutable:request_msg.info)
  return info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* request_msg::release_info() {
  // @@protoc_insertion_point(field_release:request_msg.info)
  clear_has_info();
  return info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void request_msg::set_allocated_info(::std::string* info) {
  if (info != NULL) {
    set_has_info();
  } else {
    clear_has_info();
  }
  info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), info);
  // @@protoc_insertion_point(field_set_allocated:request_msg.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
